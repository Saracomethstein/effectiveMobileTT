basePath: /
definitions:
  models.AddSongRequest:
    description: Структура для добавления новой песни.
    properties:
      group:
        type: string
      song:
        type: string
    required:
    - group
    - song
    type: object
  models.Song:
    description: Структура для отображения основной информации о песне.
    properties:
      group:
        type: string
      id:
        type: string
      releaseDate:
        type: string
      song:
        type: string
    type: object
  models.UpdateSongRequest:
    description: Структура для обновления данных о песне.
    properties:
      group:
        type: string
      song:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API для управления песнями, включая добавление, обновление, удаление
    и получение списка песен.
  title: Songs API
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Получение списка песен с фильтрацией по группе, названию и дате
        релиза.
      parameters:
      - description: Название группы
        in: query
        name: group
        type: string
      - description: Название песни
        in: query
        name: song
        type: string
      - description: Дата релиза (в формате YYYY-MM-DD)
        in: query
        name: releaseDate
        type: string
      - description: Количество записей (по умолчанию 10)
        in: query
        name: limit
        type: integer
      - description: Смещение (по умолчанию 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Get songs
      tags:
      - Songs
    post:
      consumes:
      - application/json
      description: Добавление новой песни с получением данных из внешнего API.
      parameters:
      - description: Данные для добавления песни
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AddSongRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Созданная песня
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Неверный запрос или ошибка валидации
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Ошибка сервера или внешнего API
          schema:
            additionalProperties: true
            type: object
      summary: Add a song
      tags:
      - Songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      description: Удаление песни по её ID.
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Песня удалена
        "404":
          description: Песня не найдена
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Delete a song
      tags:
      - Songs
    put:
      consumes:
      - application/json
      description: Обновление информации о песне по её ID.
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: string
      - description: Данные для обновления
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateSongRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Обновлённая песня
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Неверный запрос
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Песня не найдена
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Update a song
      tags:
      - Songs
  /songs/{id}/text:
    get:
      consumes:
      - application/json
      description: Получение текста песни по ID с возможностью пагинации по куплетам.
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: string
      - description: Количество куплетов (по умолчанию 5)
        in: query
        name: limit
        type: integer
      - description: Смещение (по умолчанию 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список куплетов
          schema:
            items:
              type: string
            type: array
        "404":
          description: Песня не найдена
          schema:
            additionalProperties: true
            type: object
      summary: Get song text
      tags:
      - Songs
swagger: "2.0"
